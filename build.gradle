plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.2'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'org.example'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

repositories {
    mavenCentral()
}

ext {
    querydslVersion = "5.0.0"
}


dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    // 현재 설정
    implementation "com.querydsl:querydsl-jpa:${querydslVersion}:jakarta"
    annotationProcessor "com.querydsl:querydsl-apt:${querydslVersion}:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api:2.1.1"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api:3.1.0"

    implementation 'com.github.gavlyukovskiy:datasource-decorator-spring-boot-autoconfigure:1.9.0'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    // jpa sql 실행될 때 파라미터까지 보기위한 p6spy 의존성
    implementation 'p6spy:p6spy:3.9.1'
    // devtools 의존성(자동 빌드 제공)
    // developmentOnly 'org.springframework.boot:spring-boot-devtools'
    // oauth2 의존성
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    // 스프링 시큐리티 의존성
    implementation 'org.springframework.boot:spring-boot-starter-security'
    // jwt 관련 의존성
    implementation 'io.jsonwebtoken:jjwt-api:0.12.3'
    implementation 'io.jsonwebtoken:jjwt-impl:0.12.3'
    implementation 'io.jsonwebtoken:jjwt-jackson:0.12.3'

    // H2
    runtimeOnly 'com.h2database:h2'
    // MySQL
    runtimeOnly 'com.mysql:mysql-connector-j'
    // swagger
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'
    // S3
    implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'

    // .env파일 로드
    implementation 'me.paulschwarz:spring-dotenv:4.0.0'

    // MongoDB
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
    //WebSocket
    implementation 'org.springframework.boot:spring-boot-starter-websocket'
    // Kafka
    implementation 'org.springframework.kafka:spring-kafka'
    implementation 'com.google.guava:guava:33.0.0-jre'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // JSON 라이브러리
    implementation 'com.googlecode.json-simple:json-simple:1.1.1'

    // 테스트 의존성
    testImplementation 'org.springframework.security:spring-security-test'

    // Spring Boot Test and JUnit 5
    testImplementation 'org.junit.jupiter:junit-jupiter:5.10.0'

    // Mockito for mocking dependencies
    testImplementation 'org.mockito:mockito-core:5.5.0'

    //redis
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.apache.commons:commons-pool2' // 커넥션 풀 사용 시 필요
}


// Querydsl 설정부
def generated = 'src/main/generated'

// querydsl QClass 파일 생성 위치를 지정
tasks.withType(JavaCompile) {
    options.getGeneratedSourceOutputDirectory().set(file(generated))
}

// java source set 에 querydsl QClass 위치 추가
sourceSets {
    main.java.srcDirs += [ generated ]
}

// gradle clean 시에 QClass 디렉토리 삭제
clean {
    delete file(generated)
}

tasks.named('test') {
    useJUnitPlatform()
}
